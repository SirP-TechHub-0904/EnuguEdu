// <auto-generated />
using System;
using EnuguEdu.Domain.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnuguEdu.Domain.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230325150712_list")]
    partial class list
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category1", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowCode")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneNumbers")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowWebsite")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category1s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category2", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Category1Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowCode")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneNumbers")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowWebsite")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category1Id");

                    b.ToTable("Category2s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category3", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Category2Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowCode")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneNumbers")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowWebsite")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category2Id");

                    b.ToTable("Category3s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category4", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Category3Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowCode")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneNumbers")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowWebsite")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category3Id");

                    b.ToTable("Category4s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category5", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Category4Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowCode")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneNumbers")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowWebsite")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category4Id");

                    b.ToTable("Category5s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category6", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Category5Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowCode")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneNumbers")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowWebsite")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category5Id");

                    b.ToTable("Category6s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category7", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Category6Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowCode")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneNumbers")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowWebsite")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category6Id");

                    b.ToTable("Category7s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category8", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Category7Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowCode")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneNumbers")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowWebsite")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category7Id");

                    b.ToTable("Category8s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category9", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Category8Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowCode")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneNumbers")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowWebsite")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category8Id");

                    b.ToTable("Category9s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.CategoryAppointment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("Category1Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Category2Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Category3Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Category4Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Category5Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Category6Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Category7Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Category8Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Category9Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndOfAppointment")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartOfAppointment")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Category1Id");

                    b.HasIndex("Category2Id");

                    b.HasIndex("Category3Id");

                    b.HasIndex("Category4Id");

                    b.HasIndex("Category5Id");

                    b.HasIndex("Category6Id");

                    b.HasIndex("Category7Id");

                    b.HasIndex("Category8Id");

                    b.HasIndex("Category9Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("CategoryAppointments");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.FAQ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FAQs");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Image", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Default")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PropertyImages");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.LocalGoverment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("LGAName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StatesId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StatesId");

                    b.ToTable("LocalGoverments");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotificationStatus")
                        .HasColumnType("int");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<int>("Retries")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgAppointment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("Category2Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Category3Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Category4Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Category5Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Category6Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Category7Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Category8Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Category9Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndOfAppointment")
                        .HasColumnType("datetime2");

                    b.Property<long?>("OgLevel1Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("OgLevel2Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("OgLevel3Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("OgLevel4Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("OgLevel5Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("OgLevel6Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("OgLevel7Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("OgLevel8Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("OgLevel9Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartOfAppointment")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Category2Id");

                    b.HasIndex("Category3Id");

                    b.HasIndex("Category4Id");

                    b.HasIndex("Category5Id");

                    b.HasIndex("Category6Id");

                    b.HasIndex("Category7Id");

                    b.HasIndex("Category8Id");

                    b.HasIndex("Category9Id");

                    b.HasIndex("OgLevel1Id");

                    b.HasIndex("OgLevel2Id");

                    b.HasIndex("OgLevel3Id");

                    b.HasIndex("OgLevel4Id");

                    b.HasIndex("OgLevel5Id");

                    b.HasIndex("OgLevel6Id");

                    b.HasIndex("OgLevel7Id");

                    b.HasIndex("OgLevel8Id");

                    b.HasIndex("OgLevel9Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("OgAppointments");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel1", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OgLevel1s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel2", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OgLevel1Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OgLevel1Id");

                    b.ToTable("OgLevel2s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel3", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OgLevel2Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OgLevel2Id");

                    b.ToTable("OgLevel3s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel4", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OgLevel3Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OgLevel3Id");

                    b.ToTable("OgLevel4s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel5", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OgLevel4Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OgLevel4Id");

                    b.ToTable("OgLevel5s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel6", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OgLevel5Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OgLevel5Id");

                    b.ToTable("OgLevel6s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel7", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OgLevel6Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OgLevel6Id");

                    b.ToTable("OgLevel7s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel8", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OgLevel7Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OgLevel7Id");

                    b.ToTable("OgLevel8s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel9", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OgLevel8Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OgLevel8Id");

                    b.ToTable("OgLevel9s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Profile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AltPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReligionStatus")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Slider", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ButtonLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlainText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.State", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Video", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VR")
                        .HasColumnType("bit");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category2", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.Category1", "Category1")
                        .WithMany("Category2s")
                        .HasForeignKey("Category1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category1");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category3", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.Category2", "Category2")
                        .WithMany("Category3s")
                        .HasForeignKey("Category2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category2");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category4", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.Category3", "Category3")
                        .WithMany("Category4s")
                        .HasForeignKey("Category3Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category3");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category5", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.Category4", "Category4")
                        .WithMany("Category5s")
                        .HasForeignKey("Category4Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category4");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category6", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.Category5", "Category5")
                        .WithMany("Category6s")
                        .HasForeignKey("Category5Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category5");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category7", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.Category6", "Category6")
                        .WithMany("Category7s")
                        .HasForeignKey("Category6Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category6");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category8", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.Category7", "Category7")
                        .WithMany("Category8s")
                        .HasForeignKey("Category7Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category7");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category9", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.Category8", "Category8")
                        .WithMany("Category9s")
                        .HasForeignKey("Category8Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category8");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.CategoryAppointment", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.Category1", "Category1")
                        .WithMany("Appointments")
                        .HasForeignKey("Category1Id");

                    b.HasOne("EnuguEdu.Domain.Models.Category2", "Category2")
                        .WithMany()
                        .HasForeignKey("Category2Id");

                    b.HasOne("EnuguEdu.Domain.Models.Category3", "Category3")
                        .WithMany()
                        .HasForeignKey("Category3Id");

                    b.HasOne("EnuguEdu.Domain.Models.Category4", "Category4")
                        .WithMany()
                        .HasForeignKey("Category4Id");

                    b.HasOne("EnuguEdu.Domain.Models.Category5", "Category5")
                        .WithMany()
                        .HasForeignKey("Category5Id");

                    b.HasOne("EnuguEdu.Domain.Models.Category6", "Category6")
                        .WithMany()
                        .HasForeignKey("Category6Id");

                    b.HasOne("EnuguEdu.Domain.Models.Category7", "Category7")
                        .WithMany()
                        .HasForeignKey("Category7Id");

                    b.HasOne("EnuguEdu.Domain.Models.Category8", "Category8")
                        .WithMany()
                        .HasForeignKey("Category8Id");

                    b.HasOne("EnuguEdu.Domain.Models.Category9", "Category9")
                        .WithMany()
                        .HasForeignKey("Category9Id");

                    b.HasOne("EnuguEdu.Domain.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category1");

                    b.Navigation("Category2");

                    b.Navigation("Category3");

                    b.Navigation("Category4");

                    b.Navigation("Category5");

                    b.Navigation("Category6");

                    b.Navigation("Category7");

                    b.Navigation("Category8");

                    b.Navigation("Category9");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.LocalGoverment", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.State", "States")
                        .WithMany("LocalGov")
                        .HasForeignKey("StatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("States");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgAppointment", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.Category2", null)
                        .WithMany("Appointments")
                        .HasForeignKey("Category2Id");

                    b.HasOne("EnuguEdu.Domain.Models.Category3", null)
                        .WithMany("Appointments")
                        .HasForeignKey("Category3Id");

                    b.HasOne("EnuguEdu.Domain.Models.Category4", null)
                        .WithMany("Appointments")
                        .HasForeignKey("Category4Id");

                    b.HasOne("EnuguEdu.Domain.Models.Category5", null)
                        .WithMany("Appointments")
                        .HasForeignKey("Category5Id");

                    b.HasOne("EnuguEdu.Domain.Models.Category6", null)
                        .WithMany("Appointments")
                        .HasForeignKey("Category6Id");

                    b.HasOne("EnuguEdu.Domain.Models.Category7", null)
                        .WithMany("Appointments")
                        .HasForeignKey("Category7Id");

                    b.HasOne("EnuguEdu.Domain.Models.Category8", null)
                        .WithMany("Appointments")
                        .HasForeignKey("Category8Id");

                    b.HasOne("EnuguEdu.Domain.Models.Category9", null)
                        .WithMany("Appointments")
                        .HasForeignKey("Category9Id");

                    b.HasOne("EnuguEdu.Domain.Models.OgLevel1", "OgLevel1")
                        .WithMany("Appointments")
                        .HasForeignKey("OgLevel1Id");

                    b.HasOne("EnuguEdu.Domain.Models.OgLevel2", "OgLevel2")
                        .WithMany("Appointments")
                        .HasForeignKey("OgLevel2Id");

                    b.HasOne("EnuguEdu.Domain.Models.OgLevel3", "OgLevel3")
                        .WithMany("Appointments")
                        .HasForeignKey("OgLevel3Id");

                    b.HasOne("EnuguEdu.Domain.Models.OgLevel4", "OgLevel4")
                        .WithMany("Appointments")
                        .HasForeignKey("OgLevel4Id");

                    b.HasOne("EnuguEdu.Domain.Models.OgLevel5", "OgLevel5")
                        .WithMany("Appointments")
                        .HasForeignKey("OgLevel5Id");

                    b.HasOne("EnuguEdu.Domain.Models.OgLevel6", "OgLevel6")
                        .WithMany("Appointments")
                        .HasForeignKey("OgLevel6Id");

                    b.HasOne("EnuguEdu.Domain.Models.OgLevel7", "OgLevel7")
                        .WithMany("Appointments")
                        .HasForeignKey("OgLevel7Id");

                    b.HasOne("EnuguEdu.Domain.Models.OgLevel8", "OgLevel8")
                        .WithMany("Appointments")
                        .HasForeignKey("OgLevel8Id");

                    b.HasOne("EnuguEdu.Domain.Models.OgLevel9", "OgLevel9")
                        .WithMany("Appointments")
                        .HasForeignKey("OgLevel9Id");

                    b.HasOne("EnuguEdu.Domain.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OgLevel1");

                    b.Navigation("OgLevel2");

                    b.Navigation("OgLevel3");

                    b.Navigation("OgLevel4");

                    b.Navigation("OgLevel5");

                    b.Navigation("OgLevel6");

                    b.Navigation("OgLevel7");

                    b.Navigation("OgLevel8");

                    b.Navigation("OgLevel9");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel2", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.OgLevel1", "OgLevel1")
                        .WithMany("OgLevel2s")
                        .HasForeignKey("OgLevel1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OgLevel1");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel3", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.OgLevel2", "OgLevel2")
                        .WithMany("OgLevel3s")
                        .HasForeignKey("OgLevel2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OgLevel2");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel4", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.OgLevel3", "OgLevel3")
                        .WithMany("OgLevel4s")
                        .HasForeignKey("OgLevel3Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OgLevel3");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel5", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.OgLevel4", "OgLevel4")
                        .WithMany("OgLevel5s")
                        .HasForeignKey("OgLevel4Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OgLevel4");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel6", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.OgLevel5", "OgLevel5")
                        .WithMany("OgLevel6s")
                        .HasForeignKey("OgLevel5Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OgLevel5");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel7", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.OgLevel6", "OgLevel6")
                        .WithMany("OgLevel7s")
                        .HasForeignKey("OgLevel6Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OgLevel6");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel8", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.OgLevel7", "OgLevel7")
                        .WithMany("OgLevel8s")
                        .HasForeignKey("OgLevel7Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OgLevel7");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel9", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.OgLevel8", "OgLevel8")
                        .WithMany("OgLevel9s")
                        .HasForeignKey("OgLevel8Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OgLevel8");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnuguEdu.Domain.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EnuguEdu.Domain.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category1", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Category2s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category2", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Category3s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category3", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Category4s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category4", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Category5s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category5", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Category6s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category6", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Category7s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category7", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Category8s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category8", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Category9s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.Category9", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel1", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("OgLevel2s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel2", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("OgLevel3s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel3", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("OgLevel4s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel4", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("OgLevel5s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel5", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("OgLevel6s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel6", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("OgLevel7s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel7", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("OgLevel8s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel8", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("OgLevel9s");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.OgLevel9", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("EnuguEdu.Domain.Models.State", b =>
                {
                    b.Navigation("LocalGov");
                });
#pragma warning restore 612, 618
        }
    }
}
